from tkinter import *
from random import *
import time

#variables globales
global xmin,xmax,ymin,ymax,window,canvas,pause,stop #attention : ces variables sont réservées...
xmin=0
xmax=700
ymin=0
ymax=400
pause=0.05 #temps d'attente entre deux itérations, en secondes
stop=True #utilisé pour les 2 boutons de commande

#fonctions indispensables pour l'affichage
def graphical_area(coul='black'):
    ## cette fonction crée une zone graphique mais ne l'affiche pas
    ## on peut ommettre de préciser certaines dimensions. Par exemple :
    ## "graphical_area(0,30,0,30)" affiche une zone avec les dimensions précisées
    ## "graphical_area()" affiche une zone de dimension 700x400
    global window,canvas,xmin,xmax,ymin,ymax
    window = Tk()
    window.title("Voici la fenêtre graphique :")
    label = Label(window, text=" Dimensions : xmin="+str(xmin)+" ; xmax="+str(xmax)+" ; ymin="+str(ymin)+" ; ymax="+str(ymax)+" ")
    label.configure(font="Arial 12")
    label.pack()
    canvas = Canvas(window, width=xmax-xmin, height=ymax-ymin, background=coul, borderwidth=0)
    canvas.pack(padx=5,pady=5)
    bouton_demarrer = Button(window, text="Démarrer 1000 itérations", command=on)
    bouton_demarrer.pack(side = LEFT, padx = 10, pady = 10)
    bouton_quitter = Button(window, text="Stopper", command=off)
    bouton_quitter.pack(side = LEFT, padx = 10, pady = 10)

def on(): # fonction appelée lors du clique sur "Démarrer 1000 itérations"
    global stop
    stop=False
    repeat(pause,1000)

def off(): # fonction appelée lors du clique sur "Stopper"
    global stop
    stop=True
    
def display(): ####fonction apparemment inutile...
    window.mainloop()

def repeat(t,n): #t est en seconde pour les élèves mais en ms pour python
    global stop
    for k in range(1000):
        if stop==False:
            iteration()
            window.update()
            time.sleep(t)
        else:
            break
            


#fonctions précodées pour les élèves
def coord(x,y):
    ## cette fonction transforme des coordonnées "math" en coordonnées "info"
    ## (x,y) sont les coordonnées comme habituellement dans le cours de maths
    ## la sortie de la fonction sera les coordonnées utilisable dans du code python
    ## normalement, les élèves n'ont pas à utiliser cette fonction...
    xres=x-xmin+2 ## pourquoi +2 ? mystère... qui peut m'expliquer ?
    yres=ymax-y+1
    return xres,yres

def axes(color="blue"):
    ## cette fonction affiche les axes de coordonnées
    ## on peut préciser la couleur (bleue par défaut)
    ## lignes des axes...
    canvas.create_line(coord(xmin,0),coord(xmax,0),fill=color)
    canvas.create_line(coord(0,ymin),coord(0,ymax),fill=color)
    ## petites flêches au bout des axes...
    kx=(xmax-xmin)/50
    ky=(ymax-ymin)/50
    k=kx
    canvas.create_polygon(coord(xmax,0),coord(xmax-k,k/2),coord(xmax-k,-k/2),fill=color)
    canvas.create_polygon(coord(0,ymax),coord(k/2,ymax-k),coord(-k/2,ymax-k),fill=color)

    ## intitulés des axes...
    canvas.create_text(coord(xmax-k,-k), text="x", font="Arial 12 italic", fill=color)
    canvas.create_text(coord(-k*1.2,ymax-k/2), text="y", font="Arial 12 italic", fill=color)

    ## "unités"...
    pas_x=(xmax-xmin)
    pas_y=(ymax-ymin)
    if pas_x>250:
        pas_x=(xmax-xmin)//10
    if pas_y>250:
        pas_y=(ymax-ymin)//10

    #sur l'axe des abscisses
    for i in range(int(xmin//pas_x)*pas_x,int(xmax//pas_x)*pas_x+1,pas_x):
        canvas.create_line(coord(i,-k/4),coord(i,k/4),fill=color)
        canvas.create_text(coord(i+10,k/4+10), text=str(i), font="Arial 12", fill=color)

    #sur l'axe des ordonnées
    for i in range(int(ymin//pas_y)*pas_y,int(ymax//pas_y)*pas_y+1,pas_y):
        canvas.create_line(coord(-ky/4,i),coord(ky/4,i),fill=color)
        canvas.create_text(coord(ky/4+20,i), text=str(i), font="Arial 12", fill=color)

def erase(n=''): #efface l'objet indiqué ou efface tout si aucun objet n'est donné
    if n=='':
        canvas.delete(ALL)
    else:
        if canvas.find_withtag(n):
            canvas.delete(n)

def alea(m=0,n=10):
    return randrange(m,n+1)

def circle(xx,yy,coul ='white',r=2,t=''):
	#tracé d'un cercle de centre (x,y) et de rayon r
	xbas,ybas=coord(xx-r,yy-r)
	xhaut,yhaut=coord(xx+r,yy+r)
	canvas.create_oval(xbas, ybas, xhaut, yhaut, outline=coul,fill=coul,tags=t)

def rect(xx,yy,coul ='white',w=50,h=100,t=''):
	#tracé d'un cercle de centre (x,y) et de rayon r
	xbas,ybas=coord(xx-w/2,yy-h/2)
	xhaut,yhaut=coord(xx+w/2,yy+h/2)
	canvas.create_rectangle(xbas, ybas, xhaut, yhaut, outline=coul,fill=coul,tags=t)

def triangle(x1,y1,x2,y2,x3,y3,coul ='white',t=''):
	#tracé d'un cercle de centre (x,y) et de rayon r
	canvas.create_polygon([x1,y1,x2,y2,x3,y3],fill=coul,tags=t)


